rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // ============================================
    // 프로덕션 모드 - 보안 규칙 적용
    // ============================================
    // 주의: Firebase Authentication 미사용으로
    // 일부 제한적 보안만 적용 가능
    // ============================================

    // Helper Functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isAdmin() {
      return isSignedIn() && 
             exists(/databases/$(database)/documents/participants/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/participants/$(request.auth.uid)).data.isAdmin == true;
    }

    // ============================================
    // 기수 정보 (Cohorts)
    // ============================================
    match /cohorts/{cohortId} {
      // 읽기: 모두 허용 (로그인 페이지에서 접근 코드 검증 필요)
      allow read: if true;
      
      // 쓰기: 제한적 허용 (프로덕션에서는 관리자 콘솔에서만 수정 권장)
      // 임시: 개발 편의를 위해 허용하되, 나중에 isAdmin()으로 변경
      allow create, update: if true;
      allow delete: if false; // 삭제 금지
    }

    // ============================================
    // 참가자 정보 (Participants)
    // ============================================
    match /participants/{participantId} {
      // 읽기: 모두 허용 (채팅방 참가자 목록 표시용)
      allow read: if true;
      
      // 생성: 제한적 허용 (회원가입용)
      allow create: if true;
      
      // 수정: 본인 정보만 (Firebase Auth 없이는 제한적)
      // 임시: 허용하되 추후 인증 추가 권장
      allow update: if true;
      
      // 삭제: 금지
      allow delete: if false;
    }

    // ============================================
    // 공지사항 (Notices)
    // ============================================
    match /notices/{noticeId} {
      // 읽기: 모두 허용
      allow read: if true;
      
      // 생성/수정: 제한적 허용 (프론트엔드에서 관리자 체크 필요)
      // TODO: isAdmin() 함수로 변경 권장
      allow create, update: if true;
      
      // 삭제: 금지 (관리자 콘솔에서만)
      allow delete: if false;
    }

    // ============================================
    // 다이렉트 메시지 (Messages)
    // ============================================
    match /messages/{messageId} {
      // 읽기: 발신자 또는 수신자만 (제한적 보안)
      // Firebase Auth 없이는 완벽한 검증 불가
      allow read: if true;
      
      // 생성: 제한적 허용
      // 필수: content 필드 존재 확인
      allow create: if request.resource.data.senderId is string &&
                      request.resource.data.receiverId is string &&
                      request.resource.data.conversationId is string &&
                      ((request.resource.data.content is string &&
                        request.resource.data.content.size() > 0) ||
                       (request.resource.data.imageUrl is string &&
                        request.resource.data.imageUrl.size() > 0));
      
      // 수정: isRead 상태만 변경 가능
      allow update: if request.resource.data.diff(resource.data).affectedKeys()
                      .hasOnly(['isRead']);
      
      // 삭제: 금지 (메시지는 삭제하지 않음)
      allow delete: if false;
    }

    // ============================================
    // 독서 인증 자료 (Reading Submissions)
    // ============================================
    match /reading_submissions/{submissionId} {
      // 읽기: 모두 허용 (다른 참가자 인증 내역 확인용)
      allow read: if true;
      
      // 생성: 필수 필드 검증
      allow create: if request.resource.data.participantId is string &&
                      request.resource.data.participationCode is string &&
                      request.resource.data.bookTitle is string &&
                      request.resource.data.bookImageUrl is string &&
                      request.resource.data.review is string &&
                      request.resource.data.dailyQuestion is string &&
                      request.resource.data.dailyAnswer is string &&
                      request.resource.data.status == 'approved';
      
      // 수정: 제한적 허용 (status 변경은 관리자만 권장)
      // TODO: 본인 작성 글만 수정 가능하도록 제한
      allow update: if true;

      // 삭제: 금지
      allow delete: if false;
    }
  }
}
